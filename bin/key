#!/usr/bin/env bash
#
# key loads secrets from a keyfile or from a 1Password vault and returns them
# for use. This helper is intended for storing keys used in shell scripts for
# easy recall.
#
#   key get gh-token
#   key set gh-token "val"
#
# This script supports the 1Password CLI. Keys which begin with `op://` will
# be retrieved from 1Password rather than reading straight from the filesystem.

set -e

KEYDIR="$DOTFILES/keys"

__key_get () {
  [ ! -f "$KEYDIR/$2" ] && echo "> Key '$2' not found" && exit 1
  k=$(cat "$KEYDIR/$2")
  if [[ $k == op://* ]]; then
    if [ -x "$(command -v op)" ]; then
      k=$(op read "$k")
    else
      echo "> 1Password CLI not found. Install it and try again."
    fi
  fi
  echo "$k"
}

__key_set () {
  echo "$2" > "$KEYDIR/$1"
}

__key_ls () {
  ls "$KEYDIR"
}

__key_help () {
  echo -e "
  Usage: key [cmd] [id]

  Commands:

    get     Fetch a key value
    set     Set a key value
    ls      List available keys
"
}

# assert arguments
[ $# -eq 0 ] && __key_help && exit 1

# switch arguments
case $1 in
  get) __key_get "$@";;
  set) __key_set "$@";;
  ls) __key_ls "$@";;
  -h|--help) __key_help;;
esac
