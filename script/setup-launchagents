#!/usr/bin/env bash

set -e

DOTFILES_ROOT=$(pwd)

PREFIX="com.rosszurowski"

install_plist () {
  cp "$1" "$2"
  launchctl load -w "$2"
  echo "> Installed $2 in launchctl"
}

init () {
  agents=$(find "$DOTFILES_ROOT" -maxdepth 2 -name \*.launchagent)
  overwrite_all=false
  backup_all=false
  skip_all=false

  echo "> Installing ${#agents[@]} LaunchAgent(s)..."

  for source in $agents; do
    dest="$HOME/Library/LaunchAgents/$PREFIX.$(basename ${source%.*})"

    if [ -f "$dest" ] || [ -d "$dest" ]; then
      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]; then
        echo "> File already exists: $PREFIX.$(basename "$source"),"
        echo "> What do you want to do?"
        echo ""
        echo "  [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all"
        read -n 1 action

        case "$action" in
          o) overwrite=true;;
          O) overwrite_all=true;;
          b) backup=true;;
          B) backup_all=true;;
          s) skip=true;;
          S) skip_all=true;;
          *) ;;
        esac
      fi

      echo ""

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]; then
        launchctl unload -w "$dest"
        trash "$dest"
        echo "> Removed $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]; then
        launchctl unload -w "$dest"
        mv "$dest" "$dest.backup"
        echo "> Moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]; then
        install_plist "$source" "$dest"
      else
        echo "> Skipping $(basename $dest)..."
      fi
    else
      install_plist "$source" "$dest"
    fi
  done
}

init
echo ""
echo "> Done!"
